generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id             String    @id @default(dbgenerated("gen_random_uuid()"))
  name           String
  entryDate      DateTime  @default(dbgenerated("(now() AT TIME ZONE 'utc-5'::text)"))
  expirationDate DateTime  @default(dbgenerated("(now() AT TIME ZONE 'utc-5'::text)"))
  price          Float     @default(0)
  stock          Int       @default(0)
  maxStock       Int?      @default(100)
  type           String
  image          String?
  qrCode         String?   @unique
  barcode        String?   @unique
  supplierId     String?
  supplier       Supplier? @relation(fields: [supplierId], references: [id])
  sales          Sale[]
}

model Sale {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  productId String
  quantity  Int
  date      DateTime
  type      String
  product   Product  @relation(fields: [productId], references: [id])
}

model Supplier {
  id       String    @id @default(dbgenerated("gen_random_uuid()"))
  name     String
  phone    String?
  email    String?
  products Product[]
}

model Notification {
  id      String   @id @default(dbgenerated("gen_random_uuid()"))
  message String
  type    String
  date    DateTime
  read    Boolean  @default(false)
}

model ChallengeSession {
  id                  String    @id @default(dbgenerated("gen_random_uuid()"))
  participantName     String
  mode                String
  startTime           DateTime  @default(now())
  endTime             DateTime?
  comments            String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime? @updatedAt
  mail                String?
  telephone           String?
  participantRole     String?
  participantLastName String?
  challengeType       String?
}
